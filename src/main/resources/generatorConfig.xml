<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">
<generatorConfiguration>
    <!-- 导入配置文件 yml不生效？ 
    <properties resource="./application.yml"/>
	-->
    <!-- defaultModelType="flat" 设置复合主键时不单独为主键创建实体 -->
    <context id="MyPost" defaultModelType="flat">

        <!-- 生成的POJO实现java.io.Serializable接口 -->
        <plugin type="org.mybatis.generator.plugins.SerializablePlugin"/>

        <!--注释-->
        <commentGenerator>
            <!-- 将数据库中表的字段描述信息添加到注释 -->
            <property name="addRemarkComments" value="true"/>
            <!-- 注释里不添加日期 -->
            <property name="suppressDate" value="true"/>
        </commentGenerator>
        <!-- 数据库连接，直接通过${}读取application.properties里的配置 -->
        <jdbcConnection
                driverClass="org.postgresql.Driver"
                connectionURL="jdbc:postgresql://10.1.122.223/microapp_20201016"
                userId="icube"
                password="FHuma025"/>

        <!-- 生成POJO对象，并将类放到com.songguoliang.springboot.entity包下 -->
        <javaModelGenerator targetPackage="com.fh.oa.apply.domain" targetProject="src/main/java"></javaModelGenerator>
        <!-- 生成mapper xml文件，并放到resources下的mapper文件夹下 -->
        <sqlMapGenerator targetPackage="mapper.postgres.oa" targetProject="src/main/resources"></sqlMapGenerator>


        <!-- 生成mapper xml对应dao接口，放到com.songguoliang.springboot.mapper包下-->
        <javaClientGenerator targetPackage="com.fh.oa.apply.mapper" targetProject="src/main/java"
                             type="XMLMAPPER"></javaClientGenerator>

        <!-- table标签可以有多个，至少一个，tableName指定表名，可以使用_和%通配符 -->
        <table tableName="tf_mss_parameter">
            <!-- 是否只生成POJO对象 -->
            <property name="modelOnly" value="false"/>
            <!-- 数据库中表名有时我们都会带个前缀，而实体又不想带前缀，这个配置可以把实体的前缀去掉 -->
            <domainObjectRenamingRule searchString="^TfMss" replaceString=""/>
        </table>

        <!--<table tableName="tf_sss_apply_leave">
           &lt;!&ndash; 是否只生成POJO对象 &ndash;&gt;
           <property name="modelOnly" value="false"/>
           &lt;!&ndash; 数据库中表名有时我们都会带个前缀，而实体又不想带前缀，这个配置可以把实体的前缀去掉 &ndash;&gt;
           <domainObjectRenamingRule searchString="^TfSssApply" replaceString=""/>
       </table>
       <table tableName="t_oa_evection">
           &lt;!&ndash; 是否只生成POJO对象 &ndash;&gt;
           <property name="modelOnly" value="false"/>
           &lt;!&ndash; 数据库中表名有时我们都会带个前缀，而实体又不想带前缀，这个配置可以把实体的前缀去掉 &ndash;&gt;
           <domainObjectRenamingRule searchString="^TOa" replaceString=""/>
       </table>
       <table tableName="tf_sss_sign_exception">
           &lt;!&ndash; 是否只生成POJO对象 &ndash;&gt;
           <property name="modelOnly" value="false"/>
           &lt;!&ndash; 数据库中表名有时我们都会带个前缀，而实体又不想带前缀，这个配置可以把实体的前缀去掉 &ndash;&gt;
           <domainObjectRenamingRule searchString="^TfSss" replaceString=""/>
       </table>-->

    </context>
</generatorConfiguration>